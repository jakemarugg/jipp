// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "job-mandatory-attributes" keyword as defined in
 * [PWG5100.7](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobext10-20031031-5100.7.pdf).
 */
data class JobMandatoryAttribute(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [JobMandatoryAttribute] attributes */
    class Type(name: String) : KeywordType<JobMandatoryAttribute>(Encoder, name)

    companion object {
        @JvmField val confirmationSheetPrint = JobMandatoryAttribute("confirmation-sheet-print")
        @JvmField val copies = JobMandatoryAttribute("copies")
        @JvmField val coverBack = JobMandatoryAttribute("cover-back")
        @JvmField val coverFront = JobMandatoryAttribute("cover-front")
        @JvmField val coverSheetInfo = JobMandatoryAttribute("cover-sheet-info")
        @JvmField val destinationStatuses = JobMandatoryAttribute("destination-statuses")
        @JvmField val destinationUris = JobMandatoryAttribute("destination-uris")
        @JvmField val feedOrientation = JobMandatoryAttribute("feed-orientation")
        @JvmField val finishings = JobMandatoryAttribute("finishings")
        @JvmField val finishingsCol = JobMandatoryAttribute("finishings-col")
        @JvmField val fontNameRequested = JobMandatoryAttribute("font-name-requested")
        @JvmField val fontSizeRequested = JobMandatoryAttribute("font-size-requested")
        @JvmField val forceFrontSide = JobMandatoryAttribute("force-front-side")
        @JvmField val impositionTemplate = JobMandatoryAttribute("imposition-template")
        @JvmField val insertSheet = JobMandatoryAttribute("insert-sheet")
        @JvmField val jobAccountId = JobMandatoryAttribute("job-account-id")
        @JvmField val jobAccountType = JobMandatoryAttribute("job-account-type")
        @JvmField val jobAccountingSheets = JobMandatoryAttribute("job-accounting-sheets")
        @JvmField val jobAccountingUserId = JobMandatoryAttribute("job-accounting-user-id")
        @JvmField val jobCopies = JobMandatoryAttribute("job-copies")
        @JvmField val jobCoverBack = JobMandatoryAttribute("job-cover-back")
        @JvmField val jobCoverFront = JobMandatoryAttribute("job-cover-front")
        @JvmField val jobDelayOutputUntil = JobMandatoryAttribute("job-delay-output-until")
        @JvmField val jobDelayOutputUntilTime = JobMandatoryAttribute("job-delay-output-until-time")
        @JvmField val jobErrorAction = JobMandatoryAttribute("job-error-action")
        @JvmField val jobErrorSheet = JobMandatoryAttribute("job-error-sheet")
        @JvmField val jobFinishings = JobMandatoryAttribute("job-finishings")
        @JvmField val jobFinishingsCol = JobMandatoryAttribute("job-finishings-col")
        @JvmField val jobHoldUntil = JobMandatoryAttribute("job-hold-until")
        @JvmField val jobHoldUntilTime = JobMandatoryAttribute("job-hold-until-time")
        @JvmField val jobMessageToOperator = JobMandatoryAttribute("job-message-to-operator")
        @JvmField val jobPagesPerSet = JobMandatoryAttribute("job-pages-per-set")
        @JvmField val jobPhoneNumber = JobMandatoryAttribute("job-phone-number")
        @JvmField val jobPriority = JobMandatoryAttribute("job-priority")
        @JvmField val jobRecipientName = JobMandatoryAttribute("job-recipient-name")
        @JvmField val jobSaveDisposition = JobMandatoryAttribute("job-save-disposition")
        @JvmField val jobSheetMessage = JobMandatoryAttribute("job-sheet-message")
        @JvmField val jobSheets = JobMandatoryAttribute("job-sheets")
        @JvmField val jobSheetsCol = JobMandatoryAttribute("job-sheets-col")
        @JvmField val materialsCol = JobMandatoryAttribute("materials-col")
        @JvmField val media = JobMandatoryAttribute("media")
        @JvmField val mediaCol = JobMandatoryAttribute("media-col")
        @JvmField val mediaInputTrayCheck = JobMandatoryAttribute("media-input-tray-check")
        @JvmField val multipleDocumentHandling = JobMandatoryAttribute("multiple-document-handling")
        @JvmField val multipleObjectHandling = JobMandatoryAttribute("multiple-object-handling")
        @JvmField val numberOfRetries = JobMandatoryAttribute("number-of-retries")
        @JvmField val numberUp = JobMandatoryAttribute("number-up")
        @JvmField val orientationRequested = JobMandatoryAttribute("orientation-requested")
        @JvmField val outputBin = JobMandatoryAttribute("output-bin")
        @JvmField val outputDevice = JobMandatoryAttribute("output-device")
        @JvmField val overrides = JobMandatoryAttribute("overrides")
        @JvmField val pageDelivery = JobMandatoryAttribute("page-delivery")
        @JvmField val pageOrderReceived = JobMandatoryAttribute("page-order-received")
        @JvmField val pageRanges = JobMandatoryAttribute("page-ranges")
        @JvmField val pagesPerSubset = JobMandatoryAttribute("pages-per-subset")
        @JvmField val pdlInitFile = JobMandatoryAttribute("pdl-init-file")
        @JvmField val platformTemperature = JobMandatoryAttribute("platform-temperature")
        @JvmField val presentationDirectionNumberUp = JobMandatoryAttribute("presentation-direction-number-up")
        @JvmField val printAccuracy = JobMandatoryAttribute("print-accuracy")
        @JvmField val printBase = JobMandatoryAttribute("print-base")
        @JvmField val printColorMode = JobMandatoryAttribute("print-color-mode")
        @JvmField val printContentOptimize = JobMandatoryAttribute("print-content-optimize")
        @JvmField val printObjects = JobMandatoryAttribute("print-objects")
        @JvmField val printQuality = JobMandatoryAttribute("print-quality")
        @JvmField val printRenderingIntent = JobMandatoryAttribute("print-rendering-intent")
        @JvmField val printScaling = JobMandatoryAttribute("print-scaling")
        @JvmField val printSupports = JobMandatoryAttribute("print-supports")
        @JvmField val printerResolution = JobMandatoryAttribute("printer-resolution")
        @JvmField val proofPrint = JobMandatoryAttribute("proof-print")
        @JvmField val retryInterval = JobMandatoryAttribute("retry-interval")
        @JvmField val retryTimeOut = JobMandatoryAttribute("retry-time-out")
        @JvmField val separatorSheets = JobMandatoryAttribute("separator-sheets")
        @JvmField val sheetCollate = JobMandatoryAttribute("sheet-collate")
        @JvmField val sides = JobMandatoryAttribute("sides")
        @JvmField val xImagePosition = JobMandatoryAttribute("x-image-position")
        @JvmField val xImageShift = JobMandatoryAttribute("x-image-shift")
        @JvmField val xSide1ImageShift = JobMandatoryAttribute("x-side1-image-shift")
        @JvmField val xSide2ImageShift = JobMandatoryAttribute("x-side2-image-shift")
        @JvmField val yImagePosition = JobMandatoryAttribute("y-image-position")
        @JvmField val yImageShift = JobMandatoryAttribute("y-image-shift")
        @JvmField val ySide1ImageShift = JobMandatoryAttribute("y-side1-image-shift")
        @JvmField val ySide2ImageShift = JobMandatoryAttribute("y-side2-image-shift")
        @JvmField val Encoder = KeywordType.encoderOf(JobMandatoryAttribute::class.java) { value, _, _ ->
            JobMandatoryAttribute(value)
        }
    }
}
