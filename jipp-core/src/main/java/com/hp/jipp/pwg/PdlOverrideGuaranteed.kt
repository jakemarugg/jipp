// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "pdl-override-guaranteed-supported" keyword as defined in:
 *   * [IPPWG20151019](http://www.pwg.org/archives/ipp/2015/018629.html)
 */
data class PdlOverrideGuaranteed(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [PdlOverrideGuaranteed] attributes */
    class Type(name: String) : KeywordType<PdlOverrideGuaranteed>(Encoder, name)

    companion object {
        @JvmField val confirmationSheetPrint = PdlOverrideGuaranteed("confirmation-sheet-print")
        @JvmField val copies = PdlOverrideGuaranteed("copies")
        @JvmField val coverBack = PdlOverrideGuaranteed("cover-back")
        @JvmField val coverFront = PdlOverrideGuaranteed("cover-front")
        @JvmField val coverSheetInfo = PdlOverrideGuaranteed("cover-sheet-info")
        @JvmField val destinationStatuses = PdlOverrideGuaranteed("destination-statuses")
        @JvmField val destinationUris = PdlOverrideGuaranteed("destination-uris")
        @JvmField val feedOrientation = PdlOverrideGuaranteed("feed-orientation")
        @JvmField val finishings = PdlOverrideGuaranteed("finishings")
        @JvmField val finishingsCol = PdlOverrideGuaranteed("finishings-col")
        @JvmField val fontNameRequested = PdlOverrideGuaranteed("font-name-requested")
        @JvmField val fontSizeRequested = PdlOverrideGuaranteed("font-size-requested")
        @JvmField val forceFrontSide = PdlOverrideGuaranteed("force-front-side")
        @JvmField val impositionTemplate = PdlOverrideGuaranteed("imposition-template")
        @JvmField val insertSheet = PdlOverrideGuaranteed("insert-sheet")
        @JvmField val jobAccountId = PdlOverrideGuaranteed("job-account-id")
        @JvmField val jobAccountType = PdlOverrideGuaranteed("job-account-type")
        @JvmField val jobAccountingSheets = PdlOverrideGuaranteed("job-accounting-sheets")
        @JvmField val jobAccountingUserId = PdlOverrideGuaranteed("job-accounting-user-id")
        @JvmField val jobCopies = PdlOverrideGuaranteed("job-copies")
        @JvmField val jobCoverBack = PdlOverrideGuaranteed("job-cover-back")
        @JvmField val jobCoverFront = PdlOverrideGuaranteed("job-cover-front")
        @JvmField val jobDelayOutputUntil = PdlOverrideGuaranteed("job-delay-output-until")
        @JvmField val jobDelayOutputUntilTime = PdlOverrideGuaranteed("job-delay-output-until-time")
        @JvmField val jobErrorAction = PdlOverrideGuaranteed("job-error-action")
        @JvmField val jobErrorSheet = PdlOverrideGuaranteed("job-error-sheet")
        @JvmField val jobFinishings = PdlOverrideGuaranteed("job-finishings")
        @JvmField val jobFinishingsCol = PdlOverrideGuaranteed("job-finishings-col")
        @JvmField val jobHoldUntil = PdlOverrideGuaranteed("job-hold-until")
        @JvmField val jobHoldUntilTime = PdlOverrideGuaranteed("job-hold-until-time")
        @JvmField val jobMessageToOperator = PdlOverrideGuaranteed("job-message-to-operator")
        @JvmField val jobPagesPerSet = PdlOverrideGuaranteed("job-pages-per-set")
        @JvmField val jobPhoneNumber = PdlOverrideGuaranteed("job-phone-number")
        @JvmField val jobPriority = PdlOverrideGuaranteed("job-priority")
        @JvmField val jobRecipientName = PdlOverrideGuaranteed("job-recipient-name")
        @JvmField val jobSaveDisposition = PdlOverrideGuaranteed("job-save-disposition")
        @JvmField val jobSheetMessage = PdlOverrideGuaranteed("job-sheet-message")
        @JvmField val jobSheets = PdlOverrideGuaranteed("job-sheets")
        @JvmField val jobSheetsCol = PdlOverrideGuaranteed("job-sheets-col")
        @JvmField val materialsCol = PdlOverrideGuaranteed("materials-col")
        @JvmField val media = PdlOverrideGuaranteed("media")
        @JvmField val mediaCol = PdlOverrideGuaranteed("media-col")
        @JvmField val mediaInputTrayCheck = PdlOverrideGuaranteed("media-input-tray-check")
        @JvmField val multipleDocumentHandling = PdlOverrideGuaranteed("multiple-document-handling")
        @JvmField val multipleObjectHandling = PdlOverrideGuaranteed("multiple-object-handling")
        @JvmField val numberOfRetries = PdlOverrideGuaranteed("number-of-retries")
        @JvmField val numberUp = PdlOverrideGuaranteed("number-up")
        @JvmField val orientationRequested = PdlOverrideGuaranteed("orientation-requested")
        @JvmField val outputBin = PdlOverrideGuaranteed("output-bin")
        @JvmField val outputDevice = PdlOverrideGuaranteed("output-device")
        @JvmField val overrides = PdlOverrideGuaranteed("overrides")
        @JvmField val pageDelivery = PdlOverrideGuaranteed("page-delivery")
        @JvmField val pageOrderReceived = PdlOverrideGuaranteed("page-order-received")
        @JvmField val pageRanges = PdlOverrideGuaranteed("page-ranges")
        @JvmField val pagesPerSubset = PdlOverrideGuaranteed("pages-per-subset")
        @JvmField val pdlInitFile = PdlOverrideGuaranteed("pdl-init-file")
        @JvmField val platformTemperature = PdlOverrideGuaranteed("platform-temperature")
        @JvmField val presentationDirectionNumberUp = PdlOverrideGuaranteed("presentation-direction-number-up")
        @JvmField val printAccuracy = PdlOverrideGuaranteed("print-accuracy")
        @JvmField val printBase = PdlOverrideGuaranteed("print-base")
        @JvmField val printColorMode = PdlOverrideGuaranteed("print-color-mode")
        @JvmField val printContentOptimize = PdlOverrideGuaranteed("print-content-optimize")
        @JvmField val printObjects = PdlOverrideGuaranteed("print-objects")
        @JvmField val printQuality = PdlOverrideGuaranteed("print-quality")
        @JvmField val printRenderingIntent = PdlOverrideGuaranteed("print-rendering-intent")
        @JvmField val printScaling = PdlOverrideGuaranteed("print-scaling")
        @JvmField val printSupports = PdlOverrideGuaranteed("print-supports")
        @JvmField val printerResolution = PdlOverrideGuaranteed("printer-resolution")
        @JvmField val proofPrint = PdlOverrideGuaranteed("proof-print")
        @JvmField val retryInterval = PdlOverrideGuaranteed("retry-interval")
        @JvmField val retryTimeOut = PdlOverrideGuaranteed("retry-time-out")
        @JvmField val separatorSheets = PdlOverrideGuaranteed("separator-sheets")
        @JvmField val sheetCollate = PdlOverrideGuaranteed("sheet-collate")
        @JvmField val sides = PdlOverrideGuaranteed("sides")
        @JvmField val xImagePosition = PdlOverrideGuaranteed("x-image-position")
        @JvmField val xImageShift = PdlOverrideGuaranteed("x-image-shift")
        @JvmField val xSide1ImageShift = PdlOverrideGuaranteed("x-side1-image-shift")
        @JvmField val xSide2ImageShift = PdlOverrideGuaranteed("x-side2-image-shift")
        @JvmField val yImagePosition = PdlOverrideGuaranteed("y-image-position")
        @JvmField val yImageShift = PdlOverrideGuaranteed("y-image-shift")
        @JvmField val ySide1ImageShift = PdlOverrideGuaranteed("y-side1-image-shift")
        @JvmField val ySide2ImageShift = PdlOverrideGuaranteed("y-side2-image-shift")
        @JvmField val Encoder = KeywordType.encoderOf(PdlOverrideGuaranteed::class.java) { value, _, _ ->
            PdlOverrideGuaranteed(value)
        }
    }
}
