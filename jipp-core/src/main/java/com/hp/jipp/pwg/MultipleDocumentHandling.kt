// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "multiple-document-handling" keyword as defined in
 * [RFC8011](http://www.iana.org/go/rfc8011).
 *
 * Also used by:
 *   * `multiple-document-handling-default`
 *   * `multiple-document-handling-supported`
 */
data class MultipleDocumentHandling(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [MultipleDocumentHandling] attributes */
    class Type(name: String) : KeywordType<MultipleDocumentHandling>(Encoder, name)

    companion object {
        @JvmField val separateDocumentsCollatedCopies = MultipleDocumentHandling("separate-documents-collated-copies")
        @JvmField val separateDocumentsUncollatedCopies = MultipleDocumentHandling("separate-documents-uncollated-copies")
        @JvmField val singleDocument = MultipleDocumentHandling("single-document")
        @JvmField val singleDocumentNewSheet = MultipleDocumentHandling("single-document-new-sheet")
        @JvmField val Encoder = KeywordType.encoderOf(MultipleDocumentHandling::class.java) { value, _, _ ->
            MultipleDocumentHandling(value)
        }
    }
}
