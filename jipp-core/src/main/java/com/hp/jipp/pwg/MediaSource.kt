// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.KeywordOrName
import com.hp.jipp.encoding.KeywordType
import com.hp.jipp.encoding.Tag

/**
 * "media-source" keyword as defined in
 * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf).
 *
 * Also used by:
 *   * `media-source-supported`
 */
data class MediaSource(
    override val value: String,
    override val tag: Tag = Tag.keyword,
    override val language: String? = null
) : KeywordOrName() {

    /** Construct a [Tag.keyword] form of this preset */
    constructor(value: String): this(value, Tag.keyword)

    override fun toString() = value

    /** An attribute type for [MediaSource] attributes */
    class Type(name: String) : KeywordType<MediaSource>(Encoder, name)

    companion object {
        @JvmField val alternate = MediaSource("alternate")
        @JvmField val alternateRoll = MediaSource("alternate-roll")
        @JvmField val auto = MediaSource("auto")
        @JvmField val bottom = MediaSource("bottom")
        @JvmField val byPassTray = MediaSource("by-pass-tray")
        @JvmField val center = MediaSource("center")
        @JvmField val disc = MediaSource("disc")
        @JvmField val envelope = MediaSource("envelope")
        @JvmField val hagaki = MediaSource("hagaki")
        @JvmField val largeCapacity = MediaSource("large-capacity")
        @JvmField val left = MediaSource("left")
        @JvmField val main = MediaSource("main")
        @JvmField val mainRoll = MediaSource("main-roll")
        @JvmField val manual = MediaSource("manual")
        @JvmField val middle = MediaSource("middle")
        @JvmField val photo = MediaSource("photo")
        @JvmField val rear = MediaSource("rear")
        @JvmField val right = MediaSource("right")
        @JvmField val roll1 = MediaSource("roll-1")
        @JvmField val roll10 = MediaSource("roll-10")
        @JvmField val roll2 = MediaSource("roll-2")
        @JvmField val roll3 = MediaSource("roll-3")
        @JvmField val roll4 = MediaSource("roll-4")
        @JvmField val roll5 = MediaSource("roll-5")
        @JvmField val roll6 = MediaSource("roll-6")
        @JvmField val roll7 = MediaSource("roll-7")
        @JvmField val roll8 = MediaSource("roll-8")
        @JvmField val roll9 = MediaSource("roll-9")
        @JvmField val side = MediaSource("side")
        @JvmField val top = MediaSource("top")
        @JvmField val tray1 = MediaSource("tray-1")
        @JvmField val tray10 = MediaSource("tray-10")
        @JvmField val tray11 = MediaSource("tray-11")
        @JvmField val tray12 = MediaSource("tray-12")
        @JvmField val tray13 = MediaSource("tray-13")
        @JvmField val tray14 = MediaSource("tray-14")
        @JvmField val tray15 = MediaSource("tray-15")
        @JvmField val tray16 = MediaSource("tray-16")
        @JvmField val tray17 = MediaSource("tray-17")
        @JvmField val tray18 = MediaSource("tray-18")
        @JvmField val tray19 = MediaSource("tray-19")
        @JvmField val tray2 = MediaSource("tray-2")
        @JvmField val tray20 = MediaSource("tray-20")
        @JvmField val tray3 = MediaSource("tray-3")
        @JvmField val tray4 = MediaSource("tray-4")
        @JvmField val tray5 = MediaSource("tray-5")
        @JvmField val tray6 = MediaSource("tray-6")
        @JvmField val tray7 = MediaSource("tray-7")
        @JvmField val tray8 = MediaSource("tray-8")
        @JvmField val tray9 = MediaSource("tray-9")
        @JvmField val Encoder = KeywordType.encoderOf(MediaSource::class.java) { value, tag, language ->
            MediaSource(value, tag, language)
        }
    }
}
