// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports
import com.hp.jipp.util.getStaticObjects

/**
 * Attribute types for the Printer Status group.
 */
object PrinterStatusGroup {

    /**
     * "device-service-count" as defined in:
     * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
     */
    @JvmField val deviceServiceCount = IntegerType("device-service-count")

    /**
     * "device-uuid" as defined in:
     * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
     */
    @JvmField val deviceUuid = UriType("device-uuid")

    /**
     * "pages-per-minute" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val pagesPerMinute = IntegerType("pages-per-minute")

    /**
     * "pages-per-minute-color" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val pagesPerMinuteColor = IntegerType("pages-per-minute-color")

    /**
     * "printer-config-change-time" as defined in:
     * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
     */
    @JvmField val printerConfigChangeTime = IntegerType("printer-config-change-time")

    /**
     * "printer-is-accepting-jobs" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerIsAcceptingJobs = BooleanType("printer-is-accepting-jobs")

    /**
     * "printer-message-time" as defined in:
     * [RFC3380](http://www.iana.org/go/rfc3380)
     */
    @JvmField val printerMessageTime = IntegerType("printer-message-time")

    /**
     * "printer-more-info" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerMoreInfo = UriType("printer-more-info")

    /**
     * "printer-state" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerState = PrinterState.Type("printer-state")

    /**
     * "printer-state-change-time" as defined in:
     * [RFC3995](http://www.iana.org/go/rfc3995)
     */
    @JvmField val printerStateChangeTime = IntegerType("printer-state-change-time")

    /**
     * "printer-state-reasons" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerStateReasons = PrinterStateReason.Type("printer-state-reasons")

    /**
     * "printer-static-resource-k-octets-free" as defined in:
     * [PWG5100.18](http://ftp.pwg.org/pub/pwg/candidates/cs-ippinfra10-20150619-5100.18.pdf)
     */
    @JvmField val printerStaticResourceKOctetsFree = IntegerType("printer-static-resource-k-octets-free")

    /**
     * "printer-supply-info-uri" as defined in:
     * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
     */
    @JvmField val printerSupplyInfoUri = UriType("printer-supply-info-uri")

    /**
     * "printer-up-time" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerUpTime = IntegerType("printer-up-time")

    /**
     * "printer-uri-supported" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val printerUriSupported = UriType("printer-uri-supported")

    /**
     * "printer-uuid" as defined in:
     * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
     */
    @JvmField val printerUuid = UriType("printer-uuid")

    /**
     * "queued-job-count" as defined in:
     * [RFC8011](http://www.iana.org/go/rfc8011)
     */
    @JvmField val queuedJobCount = IntegerType("queued-job-count")

    /**
     * "xri-authentication-supported" as defined in:
     * [RFC3380](http://www.iana.org/go/rfc3380)
     */
    @JvmField val xriAuthenticationSupported = XriAuthentication.Type("xri-authentication-supported")

    /**
     * "xri-security-supported" as defined in:
     * [RFC3380](http://www.iana.org/go/rfc3380)
     */
    @JvmField val xriSecuritySupported = XriSecurity.Type("xri-security-supported")

    /**
     * "xri-uri-scheme-supported" as defined in:
     * [RFC3380](http://www.iana.org/go/rfc3380)
     */
    @JvmField val xriUriSchemeSupported = UriType("xri-uri-scheme-supported")

    /** All known attributes */
    @JvmField
    val all = PrinterStatusGroup::class.java.getStaticObjects()
            .filter { it is AttributeType<*> }
            .map { it as AttributeType<*> }
}