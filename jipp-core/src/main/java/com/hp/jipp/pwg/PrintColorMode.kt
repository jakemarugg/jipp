// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "print-color-mode" keyword as defined in
 * [APPLE20171101](http://www.pwg.org/pipermail/ipp/2017/019392.html),
 * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf).
 *
 * Also used by:
 *   * `print-color-mode-default`
 *   * `print-color-mode-supported`
 */
data class PrintColorMode(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [PrintColorMode] attributes */
    class Type(name: String) : KeywordType<PrintColorMode>(Encoder, name)

    companion object {
        @JvmField val auto = PrintColorMode("auto")
        @JvmField val autoMonochrome = PrintColorMode("auto-monochrome")
        @JvmField val biLevel = PrintColorMode("bi-level")
        @JvmField val color = PrintColorMode("color")
        @JvmField val highlight = PrintColorMode("highlight")
        @JvmField val monochrome = PrintColorMode("monochrome")
        @JvmField val processBiLevel = PrintColorMode("process-bi-level")
        @JvmField val processMonochrome = PrintColorMode("process-monochrome")
        @JvmField val Encoder = KeywordType.encoderOf(PrintColorMode::class.java) { value, _, _ ->
            PrintColorMode(value)
        }
    }
}
