// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "notify-events" keyword as defined in:
 *   * [PWG5100.18](http://ftp.pwg.org/pub/pwg/candidates/cs-ippinfra10-20150619-5100.18.pdf)
 *   * [RFC3995](http://www.iana.org/go/rfc3995)
 *
 * Also used by:
 *   * `notify-events-default`
 *   * `notify-events-supported`
 *   * `notify-subscribed-event`
 */
data class NotifyEvents(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [NotifyEvents] attributes */
    class Type(name: String) : KeywordType<NotifyEvents>(Encoder, name)

    companion object {
        @JvmField val documentCompleted = NotifyEvents("document-completed")
        @JvmField val documentConfigChanged = NotifyEvents("document-config-changed")
        @JvmField val documentCreated = NotifyEvents("document-created")
        @JvmField val documentFetchable = NotifyEvents("document-fetchable")
        @JvmField val documentStateChanged = NotifyEvents("document-state-changed")
        @JvmField val documentStopped = NotifyEvents("document-stopped")
        @JvmField val jobCompleted = NotifyEvents("job-completed")
        @JvmField val jobConfigChanged = NotifyEvents("job-config-changed")
        @JvmField val jobCreated = NotifyEvents("job-created")
        @JvmField val jobFetchable = NotifyEvents("job-fetchable")
        @JvmField val jobProgress = NotifyEvents("job-progress")
        @JvmField val jobStateChanged = NotifyEvents("job-state-changed")
        @JvmField val jobStopped = NotifyEvents("job-stopped")
        @JvmField val none = NotifyEvents("none")
        @JvmField val printerConfigChanged = NotifyEvents("printer-config-changed")
        @JvmField val printerFinishingsChanged = NotifyEvents("printer-finishings-changed")
        @JvmField val printerMediaChanged = NotifyEvents("printer-media-changed")
        @JvmField val printerQueueOrderChanged = NotifyEvents("printer-queue-order-changed")
        @JvmField val printerRestarted = NotifyEvents("printer-restarted")
        @JvmField val printerShutdown = NotifyEvents("printer-shutdown")
        @JvmField val printerStateChanged = NotifyEvents("printer-state-changed")
        @JvmField val printerStopped = NotifyEvents("printer-stopped")
        @JvmField val Encoder = KeywordType.encoderOf(NotifyEvents::class.java) { value, _, _ ->
            NotifyEvents(value)
        }
    }
}
