// Copyright 2018 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2018-04-06
@file:Suppress("MaxLineLength")

package com.hp.jipp.pwg

import com.hp.jipp.encoding.Keyword
import com.hp.jipp.encoding.KeywordType

/**
 * "xri-authentication-supported" keyword as defined in:
 *   * [PWG5100.13](http://ftp.pwg.org/pub/pwg/candidates/cs-ippjobprinterext3v10-20120727-5100.13.pdf)
 *   * [PWG5100.18](http://ftp.pwg.org/pub/pwg/candidates/cs-ippinfra10-20150619-5100.18.pdf)
 *   * [RFC3380](http://www.iana.org/go/rfc3380)
 *   * [RFC8011](http://www.iana.org/go/rfc8011)
 */
data class XriAuthentication(
    override val value: String
) : Keyword() {

    override fun toString() = value

    /** An attribute type for [XriAuthentication] attributes */
    class Type(name: String) : KeywordType<XriAuthentication>(Encoder, name)

    companion object {
        @JvmField val basic = XriAuthentication("basic")
        @JvmField val certificate = XriAuthentication("certificate")
        @JvmField val digest = XriAuthentication("digest")
        @JvmField val negotiate = XriAuthentication("negotiate")
        @JvmField val none = XriAuthentication("none")
        @JvmField val oauth = XriAuthentication("oauth")
        @JvmField val requestingUserName = XriAuthentication("requesting-user-name")
        @JvmField val Encoder = KeywordType.encoderOf(XriAuthentication::class.java) { value, _, _ ->
            XriAuthentication(value)
        }
    }
}
